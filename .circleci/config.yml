defaults: &defaults
  working_directory: ~/outcome-suggestion-service
  docker:
    - image: cyber4all/circleci-aws:docker-git
orbs:
  docker: circleci/docker@1.4.0
  aws-cli: circleci/aws-cli@1.2.1
commands:
  install-aws: aws-cli/install
  setup-aws-cli: aws-cli/setup
version: 2.1
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Image & Unit Test
          command: | 
            docker build -t outcome-suggestion-service:$CIRCLE_SHA1 .
      - run:
          name: Login to docker
          command: docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
      - run:
          name: Publish Image 
          command: |
            docker tag outcome-suggestion-service:$CIRCLE_SHA1 "${DOCKER_USER_ORG}/outcome-suggestion-service:${CIRCLE_SHA1}"
            docker push "${DOCKER_USER_ORG}/outcome-suggestion-service:${CIRCLE_SHA1}"
      - persist_to_workspace: 
          root: ./
          paths: 
              - ./package.json
              - ./deploy.sh

  deploy-production:
    <<: *defaults
    steps:
      - attach_workspace: 
          at: ~/outcome-suggestion-service
      - setup_remote_docker
      - setup-aws-cli:
          aws-access-key-id: AWS_ECS_AccessKey
          aws-region: AWS_REGION_N_VA
          aws-secret-access-key: AWS_ECS_SecretKey
          version: "1"
      - run:
          name: Login to docker
          command: docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
      - run:
          name: Pull Image
          command: docker pull "${DOCKER_USER_ORG}/outcome-suggestion-service:${CIRCLE_SHA1}"
      - run:
          name: Publish Image 
          command: |
            export SEMVER=$(cat ./package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')
            docker tag "${DOCKER_USER_ORG}/outcome-suggestion-service:${CIRCLE_SHA1}" "${DOCKER_USER_ORG}/outcome-suggestion-service:${SEMVER}"
            docker push "${DOCKER_USER_ORG}/outcome-suggestion-service:${SEMVER}"
      - run:
          name: Deploy to ECS
          command: |
            export SEMVER=$(cat ./package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')
            export DOCKER_IMAGE="${DOCKER_USER_ORG}/outcome-suggestion-service:${SEMVER}"
            chmod +x ./deploy.sh
            sh ./deploy.sh
            
workflows:
  version: 2.1
  build-and-test:
    jobs:
      - build:
          context:
            - DockerHub
          filters:
            branches:
              ignore: /master/

  build-test-and-deploy-production:
    jobs:
      - build:
          context:
            - DockerHub
          filters:
            branches:
              only: /master/
      - deploy-production:
          requires:
            - build
          context:
            - DockerHub
            - AWS
          filters:
            branches:
              only: /master/
